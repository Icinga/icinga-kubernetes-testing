// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// TestSpecApplyConfiguration represents an declarative configuration of the TestSpec type for use
// with apply.
type TestSpecApplyConfiguration struct {
	CronSpec *string `json:"cronSpec,omitempty"`
	Image    *string `json:"image,omitempty"`
	Replicas *int    `json:"replicas,omitempty"`
}

// TestSpecApplyConfiguration constructs an declarative configuration of the TestSpec type for use with
// apply.
func TestSpec() *TestSpecApplyConfiguration {
	return &TestSpecApplyConfiguration{}
}

// WithCronSpec sets the CronSpec field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CronSpec field is set to the value of the last call.
func (b *TestSpecApplyConfiguration) WithCronSpec(value string) *TestSpecApplyConfiguration {
	b.CronSpec = &value
	return b
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *TestSpecApplyConfiguration) WithImage(value string) *TestSpecApplyConfiguration {
	b.Image = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *TestSpecApplyConfiguration) WithReplicas(value int) *TestSpecApplyConfiguration {
	b.Replicas = &value
	return b
}
